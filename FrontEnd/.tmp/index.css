.main-container .inner-block {
  text-align: justify;
  display: inline-block;
  width: 600px;
  vertical-align: middle;
  margin-bottom: 70px;
}

.main-container .inner-block p, .main-container .inner-block h2 {
  padding: 20px;
}

.main-container .img-block {
  width: 270px;
  overflow: hidden;
  text-align: center;
}

.main-container .img-block img {
  max-width: 270px;
  max-height: 270px;
}

.main-container .right-align {
  text-align: right;
}

.main-container .left-align {
  text-align: left;
}

.header-container {
  overflow: hidden;
  background: red;
}

.header-container .header .jumbotron {
  width: 100%;
  overflow: hidden;
  margin-bottom: 0;
  color: white;
  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#729fcf+0,a6cbea+70,ffffff+100 */
  background: #24b8ff;
  /* Old browsers */
  /* FF3.6-15 */
  background: -webkit-linear-gradient(top, #24b8ff 0%, #ffffff 100%);
  /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to bottom, #24b8ff 0%, #ffffff 100%);
  /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#24b8ff', endColorstr='#ffffff',GradientType=0 );
  /* IE6-9 */
}

.header-container .cloud {
  display: none;
}

.navbar-default {
  background-color: #fff;
  border: none;
}

.navbar-brand {
  padding-bottom: 35px;
}

footer {
  z-index: 999999999;
}

.footer {
  margin-top: 20px;
  position: fixed;
  bottom: 0;
  width: 100%;
}

.footer-container {
  width: 1170px;
  text-align: center;
  font-weight: bold;
  color: white;
  font-size: 1.1em;
  padding-top: 30px;
  padding-bottom: 10px;
  background-image: url("../resources/images/grassMid.png");
  background-repeat: repeat;
  border-radius: 10px 10px 0px 0px;
  -moz-border-radius: 10px 10px 0px 0px;
  -webkit-border-radius: 10px 10px 0px 0px;
  border: 0px solid #000000;
}

.wide-content {
  width: 100%;
  background-image: url("../resources/images/liquidWaterTop.png");
  -webkit-animation: backgroundScroll 20s linear infinite;
  animation: backgroundScroll 20s linear infinite;
}

@-webkit-keyframes backgroundScroll {
  from {
    background-position: 0 0;
  }
  to {
    background-position: -400px 0;
  }
}

@keyframes backgroundScroll {
  from {
    background-position: 0 0;
  }
  to {
    background-position: -400px 0;
  }
}

.blockDL {
  padding: 15px;
  display: inline-block;
}

.blockDL img {
  width: 128px;
  height: 128px;
}

.temp-score h2 {
  margin-bottom: 30px;
}

.temp-score ul {
  list-style-type: none;
}

.temp-score ul li {
  display: inline-block;
}

.temp-score .table {
  margin-bottom: 70px;
  font-weight: bold;
  border: 2px solid #82be2e;
}

.temp-score .table caption {
  padding-left: 15px;
  padding-bottom: 0px;
  padding-top: 0px;
  background-color: #82be2e;
  border-radius: 10px 10px 0px 0px;
  -moz-border-radius: 10px 10px 0px 0px;
  -webkit-border-radius: 10px 10px 0px 0px;
}

.temp-score .table caption h4 {
  color: #fff;
  margin-top: 10px;
}

.temp-score .table tr {
  text-align: center;
}

.temp-score .table tr td {
  vertical-align: middle;
}

.temp-score .normal .table tr {
  text-align: left;
}

.temp-score .normal .table tr td {
  vertical-align: middle;
  padding: 20px;
}

.temp-score .compact .table caption {
  border-radius: 10px 10px 0px 0px;
  -moz-border-radius: 10px 10px 0px 0px;
  -webkit-border-radius: 10px 10px 0px 0px;
}

.temp-score .switch-component {
  margin-bottom: 30px;
}

.temp-score .switch-component .render {
  display: table-cell;
  width: 100px;
  vertical-align: middle;
  text-align: left;
  margin: 0;
  padding: 0;
}

.temp-score .switch-component .switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
  margin: 0;
  padding: 0;
}

.temp-score .switch-component .switch input {
  display: none;
}

.temp-score .switch-component .slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.temp-score .switch-component .slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

.temp-score .switch-component .slider.round {
  border-radius: 34px;
}

.temp-score .switch-component .slider.round:before {
  border-radius: 50%;
}

.temp-score .switch-component input:checked + .slider {
  background-color: #2196F3;
}

.temp-score .switch-component input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}

.temp-score .switch-component input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  transform: translateX(26px);
}

.profile-component .table {
  margin-bottom: 70px;
  font-weight: bold;
  border: 2px solid #82be2e;
}

.profile-component .table caption {
  padding-left: 15px;
  padding-bottom: 0px;
  padding-top: 0px;
  background-color: #82be2e;
  border-radius: 10px 10px 0px 0px;
  -moz-border-radius: 10px 10px 0px 0px;
  -webkit-border-radius: 10px 10px 0px 0px;
}

.profile-component .table caption h4 {
  color: #fff;
  margin-top: 10px;
}

.profile-component .table tr {
  text-align: left;
}

.profile-component .table tr td {
  vertical-align: middle;
  padding: 20px;
}

html {
  overflow-y: scroll;
}

body {
  min-height: 400px;
}

.body-container {
  margin-bottom: 100px;
}

h2 {
  margin-bottom: 10px;
}

#progressbar {
  background-color: black;
  border-radius: 15px;
  /* (height of inner div) / 2 + padding */
  text-align: center;
  padding: 3px;
  height: 26px;
}

#progressbar .progress {
  padding-bottom: 6px;
}

#progressbar > div {
  color: white;
  font-weight: bold;
  width: 0%;
  background-color: orange;
  border-radius: 15px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
